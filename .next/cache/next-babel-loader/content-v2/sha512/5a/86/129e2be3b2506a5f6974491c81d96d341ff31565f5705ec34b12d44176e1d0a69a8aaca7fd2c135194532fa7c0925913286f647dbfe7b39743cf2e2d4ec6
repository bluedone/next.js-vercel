{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Repositories\\\\Repository-React\\\\Udemy\\\\nextJS-2\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport React from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetailPage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.image,\n    title: props.title,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://jrsgacusan:inlovedwidjuel17@cluster0.9fu8h.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for single meetup\n  const meetupId = context.params.meetupId; //Mongo db\n\n  const client = await MongoClient.connect('mongodb+srv://jrsgacusan:inlovedwidjuel17@cluster0.9fu8h.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  console.log(meetup);\n  return {\n    props: {\n      meetupData: meetup\n    }\n  };\n}\nexport default MeetupDetailPage;","map":{"version":3,"sources":["D:/Repositories/Repository-React/Udemy/nextJS-2/pages/[meetupId]/index.js"],"names":["MongoClient","React","MeetupDetail","MeetupDetailPage","props","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","findOne","console","log","meetupData"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,IAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,IAAA,OAAO,EAAEF,KAAK,CAACG,OAHjB;AAIE,IAAA,WAAW,EAAEH,KAAK,CAACI;AAJrB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,0GADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADJ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC,CAF4C,CAG5C;;AACA,QAAMf,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,0GADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMS,MAAM,GAAG,MAAMV,iBAAiB,CAACgB,OAAlB,CAA0B;AAAEZ,IAAAA,GAAG,EAAEQ;AAAP,GAA1B,CAArB;AACAf,EAAAA,MAAM,CAACS,KAAP;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA,SAAO;AACLnB,IAAAA,KAAK,EAAE;AACL4B,MAAAA,UAAU,EAAET;AADP;AADF,GAAP;AAKD;AAED,eAAepB,gBAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\nimport React from 'react';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nconst MeetupDetailPage = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.image}\r\n      title={props.title}\r\n      address={props.address}\r\n      description={props.description}\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://jrsgacusan:inlovedwidjuel17@cluster0.9fu8h.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  //fetch data for single meetup\r\n  const meetupId = context.params.meetupId;\r\n  //Mongo db\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://jrsgacusan:inlovedwidjuel17@cluster0.9fu8h.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n  const meetup = await meetupsCollection.findOne({ _id: meetupId });\r\n  client.close();\r\n\r\n  console.log(meetup);\r\n  return {\r\n    props: {\r\n      meetupData: meetup,\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}