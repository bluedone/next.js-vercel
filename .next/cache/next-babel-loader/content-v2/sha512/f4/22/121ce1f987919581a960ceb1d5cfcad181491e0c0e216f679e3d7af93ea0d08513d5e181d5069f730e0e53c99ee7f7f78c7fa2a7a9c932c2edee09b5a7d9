{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Repositories\\\\Repository-React\\\\Udemy\\\\nextJS-2\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from 'mongodb';\nimport React, { Fragment } from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport Head from 'next/head';\n\nconst MeetupDetailPage = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://jrsgacusan:inlovedwidjuel17@cluster0.9fu8h.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for single meetup\n  const meetupId = context.params.meetupId; //Mongo db\n\n  const client = await MongoClient.connect('mongodb+srv://jrsgacusan:inlovedwidjuel17@cluster0.9fu8h.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  console.log(meetup);\n  return {\n    props: {\n      meetupData: {\n        id: meetup._id.toString(),\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n        description: meetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetailPage;","map":{"version":3,"sources":["D:/Repositories/Repository-React/Udemy/nextJS-2/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","React","Fragment","MeetupDetail","Head","MeetupDetailPage","props","meetupData","title","description","image","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","findOne","console","log","id"],"mappings":"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","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb';\r\nimport React, { Fragment } from 'react';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\nimport Head from 'next/head';\r\nconst MeetupDetailPage = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{props.meetupData.title}</title>\r\n        <meta name=\"description\" content={props.meetupData.description}></meta>\r\n      </Head>\r\n\r\n      <MeetupDetail\r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://jrsgacusan:inlovedwidjuel17@cluster0.9fu8h.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  //fetch data for single meetup\r\n  const meetupId = context.params.meetupId;\r\n  //Mongo db\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://jrsgacusan:inlovedwidjuel17@cluster0.9fu8h.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n  const meetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\r\n  client.close();\r\n\r\n  console.log(meetup);\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: meetup._id.toString(),\r\n        title: meetup.title,\r\n        image: meetup.image,\r\n        address: meetup.address,\r\n        description: meetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}